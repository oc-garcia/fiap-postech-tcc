generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum SchoolSubject {
  Portugues
  Matematica
  Ciencias
  Historia
  Geografia
  EducacaoFisica
  Artes
  Ingles
  Biologia
  Quimica
  Fisica
  Sociologia
  Filosofia
  Outros
}

model User {
  id                  String   @id @default(uuid())
  name                String
  email               String   @unique
  password            String
  role                String
  contentPreferences  String? // Preferências de conteúdo (tags separadas por vírgula)
  createdContents     Content[]
  comments            Comment[]
  votes               Vote[]
}

model Content {
  id              String        @id @default(uuid())
  title           String
  description     String
  type            String
  creationDate    DateTime      @default(now())
  authorId        String
  generatedContent String
  status          String
  upvotes         Int           @default(0)
  downvotes       Int           @default(0)
  tags            String
  visibility      String
  subject         SchoolSubject 
  author          User          @relation(fields: [authorId], references: [id])
  comments        Comment[]
  votes           Vote[]
}

model Comment {
  id          String   @id @default(uuid())
  contentId   String
  userId      String
  text        String
  creationDate DateTime @default(now())
  content     Content   @relation(fields: [contentId], references: [id])
  user        User      @relation(fields: [userId], references: [id])
}

model Vote {
  id        String   @id @default(uuid())
  contentId String
  userId    String
  type      String
  voteDate  DateTime @default(now())
  content   Content  @relation(fields: [contentId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}
